
                                *** Creating a custom skill ***

When designing and building a custom skill, you create the following:

  *  A set of intents that represent actions that users can do with your skill. These intents represent the core     functionality for your skill.

  *  A set of sample utterances that specify the words and phrases users can say to invoke those intents. You map    these utterances to your intents. This mapping forms the interaction model for the skill.

  *  An invocation name that identifies the skill. The user includes this name when initiating a conversation        with your skill.

  *  If applicable, a set of images, audio files, and video files that you want to include in the skill. These       must be stored on a publicly accessible site so that each item is accessible by a unique URL.
   
  *  A cloud-based service that accepts these intents as structured requests and then acts upon them. This           service must be accessible over the Internet. You provide an endpoint for your service when configuring the     skill.
    
  *  A configuration that brings all of the above together so that Alexa can route requests to the service for       your skill. You create this configuration in the developer console.


----------------------------------------------------------------------------------------------------------

customer-to-alexa-your alexa skill

    * customer asks a question or a gives a command
    * alexa identifies your skill's name, analyzes and understands the customer's requests, then send your service a structured representation of the user's request.
    * your service processes the request and returns a text and graphical response 
    * alexa converts the returned text to speech and streams it to the device - customer hears the response from alexa's speech 

    * your graphical representation is rendered in the companion app- customer sees a graphical representation in the companion app 

----------------------------------------------------------------------------------------------------------
 * The Amazon Alexa App is a free companion app available for Fire OS, Android, iOS, and desktop web browsers.

 * Any such external resources must be available on a publicly accessible website. Each item is referenced by a unique URL that uses HTTPS.

----------------------------------------------------------------------------------------------------------

---> Design a voice user interface

* create a flow diagram that maps out how users will interact with the skill. 
* If your skill is designed to include images, gather that content and store them on a publicly accessible site. 

---> set up the skill in the developer console. when prompted to choose a model, select the custom model

---> use the voice design to build your interactive model 

* The requests your skill can handle are represented as intents

* Intents can optionally have arguments called slots.

* Sample utterances map the intents to the words and phrases users can say to interact with your skill.

* A dialog model identifies information your skill requires and the prompts Alexa can use to collect and confirm that information in a conversation with the user.

*  You can also enter and edit the JSON for the interaction model in the JSON Editor. 

* Create the JSON for the interaction model and create or update your skill with the Skill Management API or the ASK Command Line Interface.

---------------------------------------------------------------------------------------------------------------------------

coding 

  * Your primary coding task for your skill is to create a service that can accept requests from the Alexa service and send back responses.

  * For the quickest start, create an AWS Lambda function to host the service for your skill. 

  * Write the code for your skill. If you are using Lambda, you can code in Node.js, Java, Python, C#, or Go.
     If you are hosting your skill as a web service, you can use any programming language.
    
  * In the developer console, update your skill with your endpoint (for instance, the Lambda ARN).

  * Test your skill with the Test page or an Alexa-enabled device.

  * Update the metadata about your skill that will appear in the Alexa Skills Store in the Alexa app.

  * Once your skill is finished, you have the option of setting up a beta test for your skill. 
    With a beta test, you can make your skill available to a limited group of testers that you have personally selected, 
    rather than to the general public.

  -------------------------------------------------------------------------------------------------------------------------------------

  submit 

  *  Run the validation and functional tests on the Certification page in the developer console.
     These tests help you identify issues that you need to fix before you submit the skill.

  * Review the submission checklist. This checklist includes the tests performed by Amazon's certification team,
    so passing all of these tests can speed up the certification process.
  
  * When you are ready for your skill to be made public, and you have ensured that your skill fulfills
    the requirements on the certification checklist, submit your skill for certification.

  * Once your skill is published, Amazon customers can see it in the Alexa App and choose to enable and use it.
  ------------------------------------------------------------------------------------------------------------------------------------

  